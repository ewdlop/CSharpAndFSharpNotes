@page "/"

@*@using System.Threading
@using BlazorApp1.Services
@implements IDisposable
@inject ClipboardService ClipboardService
@page "/"

<button class="btn btn-primary" @onclick="CopyToClipboard" disabled=@state.IsDisabled>
    <i class="@state.ClassName"></i> @state.Text
</button>

@code {
    CancellationTokenSource cts = new();
    State state = new("Copy", "oi oi-clipboard");

    async Task CopyToClipboard()
    {
        var temp = state;
        state = new("Copied", "oi oi-check", IsDisabled: true);
        await ClipboardService.WriteTextAsync("https://www.meziantou.net".AsMemory());
        await Task.Delay(TimeSpan.FromSeconds(2), cts.Token);
        state = temp;
    }

    public void Dispose()
    {
        cts.Cancel(); // Cancel Task.Delay
        cts.Dispose();
    }

    record State(string Text, string ClassName, bool IsDisabled = false);
}*@

<div style="height:500px; overflow-y:scroll" tabindex="-1">
    <Virtualize Context="employee" ItemsProvider="@LoadEmployees">
        <ItemContent>
            <p @key="employee">
                test
            </p>
        </ItemContent>
        <Placeholder>
            <p>
                Loading&hellip;
            </p>
        </Placeholder>
    </Virtualize>
</div>


        